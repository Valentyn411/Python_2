import math

#Завдання 1
def print_twinkle():
    twinkle_lines = [
        "Twinkle, twinkle, little star,",
        "    How I wonder what you are!",
        "        Up above the world so high,",
        "        Like a diamond in the sky.",
        "Twinkle, twinkle, little star,",
        "    How I wonder what you are"
    ]
    
    for line in twinkle_lines:
        print(line)

print_twinkle()

#Завдання 2
def calculate_circle_area(radius):
    return math.pi * radius ** 2

def main():
    radius = float(input("Введіть радіус кола: "))
    area = calculate_circle_area(radius)
    print("Площа кола з радіусом", radius, "дорівнює", area)

if __name__ == "__main__":
    main()


#Завдання 3
color_list = ["Red", "Green", "White", "Black"]

first_color = color_list[0]
last_color = color_list[-1]

print("Перший колір:", first_color)
print("Останній колір:", last_color)


#Завдання 4
def calculate_expression(n):
    nn = int("%s%s" % (n, n))
    nnn = int("%s%s%s" % (n, n, n))
    return n + nn + nnn

n = 5  # Змініть це значення, якщо ви хочете використовувати інше число
result = calculate_expression(n)
print("Результат виразу", n, "+", n, n, "+", n, n, n, "дорівнює", result)


#Завдання 5
numbers = [386, 462, 47, 418, 907, 344, 236, 375, 823, 566, 597, 978, 328, 615, 953, 345, 399, 162, 758, 219, 918, 237, 412, 566, 826, 248, 866, 950, 626, 949, 687, 217, 815, 67, 104, 58, 512, 24, 892, 894, 767, 553, 81, 379, 843, 831, 445, 742, 717, 958, 743, 527]

for number in numbers:
    if number == 237:
        break
    if number % 2 == 0:
        print(number)


#Завдання 6
def check_sequence(s):
    zeros = 0
    ones = 0
    for char in s:
        if char == '0':
            zeros += 1
        elif char == '1':
            ones += 1
        else:
            return False
        if zeros == ones:
            zeros = 0
            ones = 0
    return zeros == ones

sequence1 = "01010101"
sequence2 = "00011100011"

print(check_sequence(sequence1))  # True
print(check_sequence(sequence2))  # False


#Завдання 7
def print_even_numbers(n, m):
    for i in range(-n, n + 1, m):
        if i % 2 == 0:
            print(i)

# Припустимо, що в нас є 20 студентів
students_count = 20

# Порядковий номер студента у журналі (від 1 до 20)
student_number = 1

# Викликаємо функцію для виведення парних чисел з кроком, який дорівнює порядковому номеру студента
print_even_numbers(students_count, student_number)


#Завдання 8
def calculate_password_combinations(m):
    total_combinations = 25 ** m
    return total_combinations

# Припустимо, що в нас є 20 студентів
students_count = 20

# Порядковий номер студента у журналі (від 1 до 20)
student_number = 1

# Обчислюємо кількість можливих комбінацій для паролю з кількістю комірок, що дорівнює порядковому номеру студента
combinations = calculate_password_combinations(student_number)
print("Кількість можливих комбінацій для паролю студента", student_number, ":", combinations)


#Завдання 9
my_list = [1, 2, 3, 4, 5]

my_list.extend([3, 6, 7])
print("а.) Розширений список:", my_list)

my_list.insert(1, 33333)
print("б.) Список з вставленим значенням 33333:", my_list)

my_list.reverse()
print("в.) Список у зворотньому порядку:", my_list)

my_list.append(3)
print("г.) Список з доданим значенням 3 в кінець:", my_list)

my_list.remove(3)
print("д.) Список з першим елементом значення 3 видаленим:", my_list)

my_list.sort()
print("е.) Сортований список у порядку збільшення:", my_list)

my_list.clear()
print("ж.) Очищений список:", my_list)
